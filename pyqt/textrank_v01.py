# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'textrank_v01.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import sys

sys.path.append("..")
import nltk
import numpy as np
from glob import glob

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QMainWindow, QFileDialog
from PyQt5.QtCore import pyqtSlot
from ui_mainwindow import Ui_MainWindow

from textrank import TextRank
from utils import pdf_to_text

# ignore warning
import warnings

warnings.filterwarnings(action="ignore")


STOPWORDS = nltk.corpus.stopwords.words("english")


class Summarizer(QMainWindow):
    def __init__(self):
        super(Summarizer, self).__init__()
        self.ui = Ui_MainWindow()
        self.ui.setupUi(self)

        # open file
        self.ui.pushButton.clicked.connect(self.get_file)

        # set language
        self.get_language()

        # text summarization
        self.summarize()
        # close the app
        self.close_app()

    @pyqtSlot()
    def get_file(self):
        self.file_name, _ = QFileDialog.getOpenFileName(
            self, "Open file", "c:\\", "PDF files (*.pdf)"
        )
        print(self.file_name)
        self.ui.lineEdit.setText(self.file_name)

    def get_language(self):
        if self.ui.radioButton.isChecked():
            self.language = "ko"
        elif self.ui.radioButton_2.isChecked():
            self.language = "en"

    def summarize(self):
        self.ui.pushButton_2.clicked.connect(self.clck_summary)

    def close_app(self):
        self.ui.pushButton_3.clicked.connect(self.click_close)

    @pyqtSlot()
    def clck_summary(self):
        sents = pdf_to_text(self.file_name)

        textrank = TextRank(language=self.language, tokenizer=None, stopwords=STOPWORDS)
        keysents = textrank.summarize(sents, topk=5)

        self.ui.textBrowser.setText("\n".join(keysents))

    @pyqtSlot()
    def click_close(self):
        self.close()


if __name__ == "__main__":
    app = QApplication(sys.argv)
    window = Summarizer()
    window.show()

    sys.exit(app.exec_())
